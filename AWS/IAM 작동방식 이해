참고 링크 : https://docs.aws.amazon.com/ko_kr/IAM/latest/UserGuide/intro-structure.html


IAM : Identity and Access Management
사용자 계정에 대한 인증 및 권한 부여를 제어

IAM은 Resource, ID, Entities(개체), Principals(보안 주체) 로 구성됨

  Resource는 IAM에 저장된 사용자, 그룹, 정책 및 자격 증명 공급자(?) 객체.

  Q: IAM으로 해결할 수 있는 문제는 무엇입니까?
  IAM을 사용하면 여러 사용자에게 AWS 리소스에 대한 보안 액세스를 손쉽게 제공할 수 있습니다. IAM으로 다음을 수행할 수 있습니다.

  IAM 사용자 및 액세스 관리 – AWS의 자격 증명 관리 시스템에서 사용자를 생성하거나,
   사용자에게 개별 보안 자격 증명(예: 액세스 키, 암호, Multi-Factor Authentication 디바이스)을
  할당하거나, AWS 서비스 및 리소스에 대한 액세스를 제공할 수 있도록
  임시 보안 자격 증명을 요청할 수 있습니다.
  사용자가 수행할 수 있는 작업을 제어하는 권한을 지정할 수 있습니다.
  연동 사용자의 액세스 관리 – 기업 디렉터리에서 관리하는 사용자에 대해
  만료를 구성할 수 있는 보안 자격 증명을 요청하여 IAM 사용자 계정을 생성하지 않고도
  직원과 애플리케이션에 AWS 계정의 리소스에 대한 보안 액세스를 제공할 수 있습니다.
  이 보안 자격 증명에 권한을 지정하여 사용자가 수행할 수 있는 작업을 제어합니다.




아마존 웹 서비스 IAM 사용자의 액세스 키 발급 및 관리
출처 : https://www.44bits.io/ko/post/publishing_and_managing_aws_user_access_key

하나의 IAM 사용자IAM User가 반드시 한 명의 사람이어야하는 것은 아닙니다.
이는 사람과 1:1로 매치되는 개념이라기보다는 권한을 정의하기 위한
하나의 논리적인 단위로 보는 것이 더 적절합니다.

SDK 등 외부 프로그래밍 방식으로 인스턴스에 접근하기 위해서는 위의 출처를 따라
IAM 사용자를 생성한다.

권한 부여는 직접 설정에서 administrator access 선택 (사실 상 root 권한)

태그를 통해 사용자 관리를 할 수 있다지만

일단은 테스트 계정이므로 태그 작성 없이 진행

이제 Access key ID와 Secret Access Key를 획득하였다.


나중에 태그 사용법도 찾아보자
